 trigger:

- master



resources:

- repo: self



variables:

  imageRepo: sampleapp

  tag: '$(Build.BuildId)'

  azureSubscription: 'b7a3e388-f81a-46b3-b758-5fb5229730f3'
  webAppName: 'Demoapp-dotnet'
  environmentName: 'Demoapp-dotnet'
  vmImageName: 'ubuntu-latest'


stages:

- stage: Build

  displayName: Build image

  jobs:

  - job: Build

    displayName: Build

    pool:

      vmImage: ubuntu-latest

    steps:

    - task: DotNetCoreCLI@2

      inputs:

        command: 'build'

        projects: '**/*.csproj'

        arguments: '-c Release'

   

    - task: DotNetCoreCLI@2

      inputs:

        command: 'publish'

        publishWebProjects: true

        arguments: '-o $(Build.ArtifactStagingDirectory)/web'



    - task: PublishBuildArtifacts@1

      inputs:

        PathtoPublish: '$(Build.ArtifactStagingDirectory)'

        ArtifactName: 'drop'



- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: demoapp85'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: '$(Pipeline.Workspace)/drop/**/*.?(zip)'
